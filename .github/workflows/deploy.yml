name: Deploy to S3 and Invalidate CloudFront

on:
  push:
    branches:
      - master # master 브랜치에서 push 발생 시 실행

jobs:
  deploy:
    runs-on: ubuntu-22.04 # 안정적인 Ubuntu 22.04로 고정

    steps:
      # 1. 저장소 코드 가져오기
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. AWS Credentials 설정
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ fromJson(secrets.aws_cloudfront_cicd_secrets).AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ fromJson(secrets.aws_cloudfront_cicd_secrets).AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ fromJson(secrets.aws_cloudfront_cicd_secrets).AWS_DEFAULT_REGION }}

      # 3. 종속성 설치 및 환경 설정
      - name: Install missing dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq # 필요에 따라 추가
          sudo apt-get install -y awscli

      # 4. 의존성 설치 및 빌드
      - name: Install dependencies and build
        run: |
          yarn install
          yarn build

      # 5. S3로 배포
      - name: Deploy to S3
        run: |
          aws s3 sync ./dist s3://www.yourd.xyz.mainhompage --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ fromJson(secrets.aws_cloudfront_cicd_secrets).AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ fromJson(secrets.aws_cloudfront_cicd_secrets).AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ fromJson(secrets.aws_cloudfront_cicd_secrets).AWS_DEFAULT_REGION }}

      # 6. CloudFront 캐시 무효화
      - name: Invalidate CloudFront Cache
        run: |
          aws cloudfront create-invalidation --distribution-id YOUR_DISTRIBUTION_ID --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ fromJson(secrets.aws_cloudfront_cicd_secrets).AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ fromJson(secrets.aws_cloudfront_cicd_secrets).AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ fromJson(secrets.aws_cloudfront_cicd_secrets).AWS_DEFAULT_REGION }}